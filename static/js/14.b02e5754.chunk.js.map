{"version":3,"sources":["theme/Alert/SuccessAlert.js","theme/Alert/ErrorAlert.js","../node_modules/@material-ui/core/esm/FormControl/FormControl.js","component/Welcome/Welcome.js"],"names":["SuccessAlert","props","state","anchorOrigin","vertical","horizontal","autoHideDuration","alertProps","severity","elevation","variant","classes","this","Object","assign","snackbarProps","className","messageSuccess","message","t","React","Component","withStyles","color","withTranslation","ErrorAlert","style","height","messageError","fontWeight","backgroundColor","fontSize","padding","FormControl","ref","children","_props$color","_props$component","component","_props$disabled","disabled","_props$error","error","_props$fullWidth","fullWidth","visuallyFocused","focused","_props$hiddenLabel","hiddenLabel","_props$margin","margin","_props$required","required","size","_props$variant","other","_objectWithoutProperties","_React$useState","initialAdornedStart","forEach","child","isMuiElement","input","isAdornedStart","adornedStart","setAdornedStart","_React$useState2","initialFilled","isFilled","filled","setFilled","_React$useState3","_focused","setFocused","undefined","onFilled","childContext","onBlur","onEmpty","onFocus","registerEffect","FormControlContext","Provider","value","_extends","clsx","root","concat","capitalize","display","flexDirection","position","minWidth","border","verticalAlign","marginNormal","marginTop","marginBottom","marginDense","width","name","Welcome","popoverCreatePrivateBoard","dataInitPrivateBoard","sizeChessBoard","isLoading","successOpen","errorOpen","handleCloseNotice","bind","openPopoverCreatePrivateBoard","closePopoverCreatePrivateBoard","createChessBoard","handleInitPrivateBoardChange","event","setState","currentTarget","dataUser","idChessBoard","userId","Date","getTime","dataChessBoard","dataBoard","userIdChessmanA","userIdChessmanB","chessBoardType","PRIVATE_BOARD","createBy","dataMembersBoard","chessBoardOpen","firebase","database","set","setTimeout","history","push","links","replace","dataUserAuth","Fragment","welcomeWrapper","to","goToTrainingWithAI","btnWelcomePage","i18n","goToTrainingWithYourself","goToChatPage","goToListChessBoard","onClick","open","anchorEl","onClose","transformOrigin","createPrivateBoardPopover","type","onChange","target","inputProps","min","max","submitCreateBoard","compose","connect","authReducer","gameReducer","dispatch","theme","alignItems","justifyContent","textTransform","borderRadius","btnCreateChessBoard","withRouter"],"mappings":"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","file":"static/js/14.b02e5754.chunk.js","sourcesContent":["import React from \"react\";\nimport {Snackbar, withStyles} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport {withTranslation} from \"react-i18next\";\n\nconst styles = {\n    messageSuccess:{\n        '& .MuiAlert-filledError': {\n            color: '#fff !important',\n        }\n    }\n};\n\nclass SuccessAlert extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            props: {\n                anchorOrigin:{\n                    vertical: 'top',\n                    horizontal: 'center',\n                },\n                autoHideDuration:3000\n            },\n            alertProps: {\n                severity:\"success\",\n                elevation:6,\n                variant:\"filled\"\n            }\n        };\n    }\n\n    render() {\n        const {classes} = this.props;\n        const props = Object.assign(this.state.props,this.props.snackbarProps?this.props.snackbarProps:{});\n        const alertProps = Object.assign(this.state.alertProps,this.props.alertProps?this.props.alertProps:{});\n        return <Snackbar\n            {...props}\n            className={classes.messageSuccess}\n        >\n            <Alert {...alertProps}>\n                {this.props.message?this.props.message:this.props.t(\"form.success.save_ok\")}\n            </Alert>\n        </Snackbar>;\n    }\n}\n\nexport default withStyles(styles)(withTranslation()(SuccessAlert));\n","import React from \"react\";\nimport {Snackbar, withStyles} from \"@material-ui/core\";\nimport {Alert} from \"@material-ui/lab\";\nimport {withTranslation} from \"react-i18next\";\n\nconst styles = {\n    messageError: {\n        '& .MuiAlert-filledError': {\n            color: '#fff !important',\n            fontWeight: 500,\n            backgroundColor: '#e7434f !important',\n            fontSize: 18,\n            padding: '20px 40px 20px 40px',\n        }\n    }\n};\n\nclass ErrorAlert extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {\n            props: {\n                anchorOrigin:{\n                    vertical: 'top',\n                    horizontal: 'center',\n                },\n                autoHideDuration:1000\n            },\n            alertProps: {\n                severity:\"error\",\n                elevation:6,\n                variant:\"filled\"\n            }\n        };\n    }\n\n    render() {\n        const {classes} = this.props;\n        const props = Object.assign(this.state.props,this.props.snackbarProps?this.props.snackbarProps:{});\n        const alertProps = Object.assign(this.state.alertProps,this.props.alertProps?this.props.alertProps:{});\n        return <Snackbar\n            {...props}\n            style={{\n                height: 300,\n            }}\n            className={classes.messageError}\n            autoHideDuration={3000}\n        >\n            <Alert {...alertProps}>\n               {this.props.message?this.props.message:this.props.t(\"form.error.occurred\")}\n            </Alert>\n        </Snackbar>;\n    }\n}\n\nexport default withStyles(styles)(withTranslation()(ErrorAlert));\n","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { isFilled, isAdornedStart } from '../InputBase/utils';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport isMuiElement from '../utils/isMuiElement';\nimport FormControlContext from './FormControlContext';\nexport var styles = {\n  /* Styles applied to the root element. */\n  root: {\n    display: 'inline-flex',\n    flexDirection: 'column',\n    position: 'relative',\n    // Reset fieldset default style.\n    minWidth: 0,\n    padding: 0,\n    margin: 0,\n    border: 0,\n    verticalAlign: 'top' // Fix alignment issue on Safari.\n\n  },\n\n  /* Styles applied to the root element if `margin=\"normal\"`. */\n  marginNormal: {\n    marginTop: 16,\n    marginBottom: 8\n  },\n\n  /* Styles applied to the root element if `margin=\"dense\"`. */\n  marginDense: {\n    marginTop: 8,\n    marginBottom: 4\n  },\n\n  /* Styles applied to the root element if `fullWidth={true}`. */\n  fullWidth: {\n    width: '100%'\n  }\n};\n/**\n * Provides context such as filled/focused/error/required for form inputs.\n * Relying on the context provides high flexibility and ensures that the state always stays\n * consistent across the children of the `FormControl`.\n * This context is used by the following components:\n *\n *  - FormLabel\n *  - FormHelperText\n *  - Input\n *  - InputLabel\n *\n * You can find one composition example below and more going to [the demos](/components/text-fields/#components).\n *\n * ```jsx\n * <FormControl>\n *   <InputLabel htmlFor=\"my-input\">Email address</InputLabel>\n *   <Input id=\"my-input\" aria-describedby=\"my-helper-text\" />\n *   <FormHelperText id=\"my-helper-text\">We'll never share your email.</FormHelperText>\n * </FormControl>\n * ```\n *\n * ⚠️Only one input can be used within a FormControl.\n */\n\nvar FormControl = /*#__PURE__*/React.forwardRef(function FormControl(props, ref) {\n  var children = props.children,\n      classes = props.classes,\n      className = props.className,\n      _props$color = props.color,\n      color = _props$color === void 0 ? 'primary' : _props$color,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'div' : _props$component,\n      _props$disabled = props.disabled,\n      disabled = _props$disabled === void 0 ? false : _props$disabled,\n      _props$error = props.error,\n      error = _props$error === void 0 ? false : _props$error,\n      _props$fullWidth = props.fullWidth,\n      fullWidth = _props$fullWidth === void 0 ? false : _props$fullWidth,\n      visuallyFocused = props.focused,\n      _props$hiddenLabel = props.hiddenLabel,\n      hiddenLabel = _props$hiddenLabel === void 0 ? false : _props$hiddenLabel,\n      _props$margin = props.margin,\n      margin = _props$margin === void 0 ? 'none' : _props$margin,\n      _props$required = props.required,\n      required = _props$required === void 0 ? false : _props$required,\n      size = props.size,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'standard' : _props$variant,\n      other = _objectWithoutProperties(props, [\"children\", \"classes\", \"className\", \"color\", \"component\", \"disabled\", \"error\", \"fullWidth\", \"focused\", \"hiddenLabel\", \"margin\", \"required\", \"size\", \"variant\"]);\n\n  var _React$useState = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialAdornedStart = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        var input = isMuiElement(child, ['Select']) ? child.props.input : child;\n\n        if (input && isAdornedStart(input.props)) {\n          initialAdornedStart = true;\n        }\n      });\n    }\n\n    return initialAdornedStart;\n  }),\n      adornedStart = _React$useState[0],\n      setAdornedStart = _React$useState[1];\n\n  var _React$useState2 = React.useState(function () {\n    // We need to iterate through the children and find the Input in order\n    // to fully support server-side rendering.\n    var initialFilled = false;\n\n    if (children) {\n      React.Children.forEach(children, function (child) {\n        if (!isMuiElement(child, ['Input', 'Select'])) {\n          return;\n        }\n\n        if (isFilled(child.props, true)) {\n          initialFilled = true;\n        }\n      });\n    }\n\n    return initialFilled;\n  }),\n      filled = _React$useState2[0],\n      setFilled = _React$useState2[1];\n\n  var _React$useState3 = React.useState(false),\n      _focused = _React$useState3[0],\n      setFocused = _React$useState3[1];\n\n  var focused = visuallyFocused !== undefined ? visuallyFocused : _focused;\n\n  if (disabled && focused) {\n    setFocused(false);\n  }\n\n  var registerEffect;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var registeredInput = React.useRef(false);\n\n    registerEffect = function registerEffect() {\n      if (registeredInput.current) {\n        console.error(['Material-UI: There are multiple InputBase components inside a FormControl.', 'This is not supported. It might cause infinite rendering loops.', 'Only use one InputBase.'].join('\\n'));\n      }\n\n      registeredInput.current = true;\n      return function () {\n        registeredInput.current = false;\n      };\n    };\n  }\n\n  var onFilled = React.useCallback(function () {\n    setFilled(true);\n  }, []);\n  var onEmpty = React.useCallback(function () {\n    setFilled(false);\n  }, []);\n  var childContext = {\n    adornedStart: adornedStart,\n    setAdornedStart: setAdornedStart,\n    color: color,\n    disabled: disabled,\n    error: error,\n    filled: filled,\n    focused: focused,\n    fullWidth: fullWidth,\n    hiddenLabel: hiddenLabel,\n    margin: (size === 'small' ? 'dense' : undefined) || margin,\n    onBlur: function onBlur() {\n      setFocused(false);\n    },\n    onEmpty: onEmpty,\n    onFilled: onFilled,\n    onFocus: function onFocus() {\n      setFocused(true);\n    },\n    registerEffect: registerEffect,\n    required: required,\n    variant: variant\n  };\n  return /*#__PURE__*/React.createElement(FormControlContext.Provider, {\n    value: childContext\n  }, /*#__PURE__*/React.createElement(Component, _extends({\n    className: clsx(classes.root, className, margin !== 'none' && classes[\"margin\".concat(capitalize(margin))], fullWidth && classes.fullWidth),\n    ref: ref\n  }, other), children));\n});\nprocess.env.NODE_ENV !== \"production\" ? FormControl.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * The contents of the form control.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The color of the component. It supports those theme colors that make sense for this component.\n   */\n  color: PropTypes.oneOf(['primary', 'secondary']),\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * If `true`, the label, input and helper text should be displayed in a disabled state.\n   */\n  disabled: PropTypes.bool,\n\n  /**\n   * If `true`, the label should be displayed in an error state.\n   */\n  error: PropTypes.bool,\n\n  /**\n   * If `true`, the component will be displayed in focused state.\n   */\n  focused: PropTypes.bool,\n\n  /**\n   * If `true`, the component will take up the full width of its container.\n   */\n  fullWidth: PropTypes.bool,\n\n  /**\n   * If `true`, the label will be hidden.\n   * This is used to increase density for a `FilledInput`.\n   * Be sure to add `aria-label` to the `input` element.\n   */\n  hiddenLabel: PropTypes.bool,\n\n  /**\n   * If `dense` or `normal`, will adjust vertical spacing of this and contained components.\n   */\n  margin: PropTypes.oneOf(['dense', 'none', 'normal']),\n\n  /**\n   * If `true`, the label will indicate that the input is required.\n   */\n  required: PropTypes.bool,\n\n  /**\n   * The size of the text field.\n   */\n  size: PropTypes.oneOf(['medium', 'small']),\n\n  /**\n   * The variant to use.\n   */\n  variant: PropTypes.oneOf(['filled', 'outlined', 'standard'])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiFormControl'\n})(FormControl);","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport {compose} from \"redux\";\nimport Footer from \"../Footer\";\nimport Header from \"../Header\";\nimport AuthBlock from \"../Auth/Auth\";\nimport Content from \"../Content\";\nimport Button from \"@material-ui/core/Button\";\nimport {NavLink, withRouter} from \"react-router-dom\";\nimport * as links from \"./../../constants/links\";\nimport {MESSAGE_TYPE_CREATE_PRIVATE_BOARD, PRIVATE_BOARD, PRIVATE_CHAT} from \"../../constants/constants\";\nimport Popover from \"@material-ui/core/Popover\";\nimport Input from \"@material-ui/core/Input\";\nimport firebase from \"../../firebase\";\nimport i18n from \"../../i18n\";\nimport AppInput from \"../../theme/AppInput\";\nimport SuccessAlert from \"../../theme/Alert/SuccessAlert\";\nimport ErrorAlert from \"../../theme/Alert/ErrorAlert\";\nimport LoadingAction from \"../../theme/LoadingAction\";\nimport {withTranslation} from \"react-i18next\";\n\nconst styles = theme => ({\n    welcomeWrapper: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '100%',\n    },\n    btnWelcomePage: {\n        backgroundColor: '#dfe3f1',\n        textTransform: 'initial',\n        padding: '0.5rem 1.5rem',\n        fontWeight: 600,\n        borderRadius: 9,\n        marginBottom: '1rem',\n        color: '#123152',\n        '&:hover': {\n            backgroundColor: '#dfe3f1',\n        }\n    },\n    goToTrainingWithAI: {\n\n    },\n    goToTrainingWithYourself: {\n\n    },\n    goToChatPage: {\n\n    },\n    goToListChessBoard: {\n\n    },\n    btnCreateChessBoard: {\n\n    },\n    submitCreateBoard: {\n        backgroundColor: '#123152',\n        textTransform: 'initial',\n        padding: '0.5rem 1.5rem',\n        fontWeight: 600,\n        borderRadius: 9,\n        marginBottom: '1rem',\n        color: '#dfe3f1',\n        '&:hover': {\n            backgroundColor: '#123152',\n        }\n    },\n    createPrivateBoardPopover: {\n        padding: '2rem 0.5rem',\n        display: 'flex',\n        flexDirection: 'column',\n        borderRadius: 11,\n        width: 400,\n    }\n});\nclass Welcome extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            popoverCreatePrivateBoard: null,\n            dataInitPrivateBoard: {\n                sizeChessBoard: 10,\n            },\n            isLoading: false,\n            successOpen: false,\n            errorOpen: false,\n        };\n        this.handleCloseNotice = this.handleCloseNotice.bind(this);\n\n        this.openPopoverCreatePrivateBoard = this.openPopoverCreatePrivateBoard.bind(this);\n        this.closePopoverCreatePrivateBoard = this.closePopoverCreatePrivateBoard.bind(this);\n        this.createChessBoard = this.createChessBoard.bind(this);\n        this.handleInitPrivateBoardChange = this.handleInitPrivateBoardChange.bind(this);\n    }\n\n    componentDidMount() {\n\n    }\n\n    openPopoverCreatePrivateBoard(event) {\n        this.setState({\n            popoverCreatePrivateBoard: event.currentTarget\n        })\n    }\n\n    closePopoverCreatePrivateBoard() {\n        this.setState({\n            popoverCreatePrivateBoard: null\n        });\n    }\n    createChessBoard() {\n        const {\n            dataUser\n        } = this.props;\n        const {\n            dataInitPrivateBoard\n        } = this.state;\n        const idChessBoard = dataUser.userId + '_' + new Date().getTime();\n        const dataChessBoard = {\n            idChessBoard: idChessBoard,\n            dataBoard: {\n                sizeChessBoard: dataInitPrivateBoard.sizeChessBoard,\n            },\n            userIdChessmanA: dataUser.userId,\n            userIdChessmanB: null,\n            chessBoardType: PRIVATE_BOARD,\n            createBy: dataUser.userId,\n            dataMembersBoard: {\n                [dataUser.userId]: dataUser\n            },\n            chessBoardOpen: true,\n        }\n\n        this.setState({\n            isLoading: true\n        })\n        firebase.database().ref('chessBoards/' + idChessBoard).set(dataChessBoard, (error) => {\n            if (error) {\n                this.setState({\n                    popoverCreatePrivateBoard: null,\n                    errorOpen: true,\n                    isLoading: false\n                })\n            } else {\n                setTimeout(() => {\n                    this.setState({\n                        popoverCreatePrivateBoard: null,\n                        successOpen: true,\n                        isLoading: false\n                    })\n\n                    this.props.history.push(links.LINK_CHESS_BOARD.replace(\":idChessBoard\", idChessBoard));\n                },500);\n            }\n        });\n\n    }\n    handleInitPrivateBoardChange(name, value) {\n        const {\n            dataInitPrivateBoard\n        } = this.state;\n        if (name === 'sizeChessBoard') {\n            if (value < 10 || value > 20) {\n                value = dataInitPrivateBoard.sizeChessBoard\n            }\n        }\n        dataInitPrivateBoard[name] = value;\n        this.setState({\n            dataInitPrivateBoard: dataInitPrivateBoard\n        })\n    }\n\n    handleCloseNotice() {\n        this.setState({\n            successOpen: false,\n            errorOpen: false,\n        });\n    }\n\n    render() {\n        const {\n            popoverCreatePrivateBoard,\n            dataInitPrivateBoard,\n            isLoading,\n            errorOpen,\n            successOpen,\n        } = this.state;\n        const {\n            classes,\n            dataUserAuth,\n\n        } = this.props;\n\n        return (\n            <React.Fragment>\n                {isLoading && <LoadingAction />}\n                <Header />\n                <Content>\n                    <div className={classes.welcomeWrapper}>\n                        <NavLink\n                            to={links.LINK_TRAINING_WITH_AI}\n                        >\n                            <Button\n                                className={classes.goToTrainingWithAI + ' ' + classes.btnWelcomePage}\n                            >\n                                {i18n.t('welcome.goToTrainingWithAI')}\n                            </Button>\n                        </NavLink>\n                        <NavLink\n                            to={links.LINK_TRAINING_WITH_YOURSELF}\n                        >\n                            <Button\n                                className={classes.goToTrainingWithYourself + ' ' + classes.btnWelcomePage}\n                            >\n                                {i18n.t('welcome.goToTrainingWithYourself')}\n                            </Button>\n                        </NavLink>\n                        {dataUserAuth && <NavLink\n                            to={links.LINK_CHAT_PAGE}\n                        >\n                            <Button\n                                className={classes.goToChatPage + ' ' + classes.btnWelcomePage}\n                            >\n                                {i18n.t('welcome.goToChatPage')}\n                            </Button>\n                        </NavLink>}\n                        {dataUserAuth && <NavLink\n                            to={links.LINK_LIST_CHESS_BOARD}\n                        >\n                            <Button\n                                className={classes.goToListChessBoard + ' ' + classes.btnWelcomePage}\n                            >\n                                {i18n.t('welcome.goToListChessBoard')}\n                            </Button>\n                        </NavLink>}\n                        {dataUserAuth && <React.Fragment>\n                            <Button\n                                className={classes.goToListChessBoard + ' ' + classes.btnWelcomePage}\n                                onClick={this.openPopoverCreatePrivateBoard}\n                            >\n                                {i18n.t('welcome.createChessBoard')}\n                            </Button>\n                            {popoverCreatePrivateBoard && <Popover\n                                open={true}\n                                anchorEl={popoverCreatePrivateBoard}\n                                onClose={this.closePopoverCreatePrivateBoard}\n                                anchorOrigin={{\n                                    vertical: 'top',\n                                    horizontal: 'center',\n                                }}\n                                transformOrigin={{\n                                    vertical: 'bottom',\n                                    horizontal: 'center',\n                                }}\n                            >\n                                <div className={classes.createPrivateBoardPopover}>\n                                    <AppInput\n                                        type=\"number\"\n                                        name=\"sizeChessBoard\"\n                                        value={dataInitPrivateBoard.sizeChessBoard}\n                                        onChange={(event) => this.handleInitPrivateBoardChange('sizeChessBoard', event.target.value)}\n                                        inputProps={{\n                                            min: 10,\n                                            max: 20\n                                        }}\n                                    />\n                                    <Button\n                                        className={classes.submitCreateBoard}\n                                        onClick={this.createChessBoard}\n                                    >\n                                        {i18n.t('welcome.createChessBoard')}\n                                    </Button>\n                                </div>\n                            </Popover>}\n                        </React.Fragment>}\n                    </div>\n                </Content>\n                <Footer />\n                <SuccessAlert\n                    snackbarProps={{\n                        open:successOpen,\n                        onClose:this.handleCloseNotice,\n                    }}\n                    message={i18n.t('alert.success')}\n                />\n                <ErrorAlert\n                    snackbarProps={{\n                        open:errorOpen,\n                        onClose:this.handleCloseNotice,\n                    }}\n                    message={i18n.t('alert.error')}\n                />\n            </React.Fragment>\n        );\n    }\n}\n\nWelcome.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = state => ({\n    dataUserAuth: state.authReducer.dataUserAuth,\n    dataUser: state.gameReducer.dataUser,\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withStyles(styles),\n    withTranslation(),\n    withRouter\n) (Welcome);\n"],"sourceRoot":""}
{"version":3,"sources":["images/person_icon.svg","component/Game/TrainingWithAI.js"],"names":["_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","apply","this","_objectWithoutProperties","excluded","sourceKeys","keys","indexOf","_objectWithoutPropertiesLoose","getOwnPropertySymbols","sourceSymbolKeys","propertyIsEnumerable","_ref2","createElement","_ref3","id","d","className","transform","_ref4","SvgPersonIcon","_ref","svgRef","title","props","width","height","viewBox","ref","ForwardRef","forwardRef","Transition","React","direction","TrainingWithAI","state","openDialog","showBoard","setupBoardCheck","dataBoardTrainingWithAI","chessmanWin","setupBoard","sizeChessBoard","iconChessmanA","iconChessmanB","firstTurn","CHESSMAN_PLAYER","menuSelectChessmanAIcon","menuSelectChessmanBIcon","checkShowChessman","setupChessmanDone","getDataBoardCurrent","bind","handleDisagree","handleAgree","checkWinChessman","handleSetupBoardChange","createNewChessBoard","openMenuSelectChessmanAIcon","closeMenuSelectChessmanAIcon","openMenuSelectChessmanBIcon","closeMenuSelectChessmanBIcon","event","setState","currentTarget","dataUserAuth","showDataChessmans","chessmanUserId","uid","prevProps","prevState","snapshot","dataChessmans","Array","isArray","saveDataBoardTrainingWithAI","dataBoard","name","value","chessmanId","classes","Fragment","trainingWithAI","trainingHeader","i18n","t","setupBoardWrapper","sizeInput","type","onChange","inputProps","min","max","selectChessman","aria-controls","btnChessman","aria-haspopup","onClick","iconChessman","src","chessmanUrl","alt","style","notChessman","anchorEl","keepMounted","open","onClose","map","item","index","btnSetupBoard","size","chessmanA","CHESSMAN_AI_ID","chessmanB","chessBoardType","CHESS_BOARD_TYPE_TRAINING_WITH_AI","dataBoardTrainingDefault","dialogProps","messageProps","content","color","disagreeButtonProps","background","agreeButtonProps","dialogNotice","PaperProps","backgroundColor","boxShadow","fullScreen","TransitionComponent","winNoticeWrapper","NoiceWinIcon","noticeWin","btnNewChessBoard","Component","compose","connect","authReducer","gameReducer","dispatch","dataTraining","gameActions","withStyles","theme","display","alignItems","justifyContent","flexDirection","overflowY","borderRadius","margin","padding","fontSize","fontWeight","paddingLeft","textAlign","textTransform","marginTop","border","withTranslation"],"mappings":"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","file":"static/js/16.a9d9c406.chunk.js","sourcesContent":["function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\nimport React from \"react\";\n\nvar _ref2 = /*#__PURE__*/React.createElement(\"defs\", null, /*#__PURE__*/React.createElement(\"style\", null, \"\\n            .prefix__cls-1{fill:#00334e}\\n        \"));\n\nvar _ref3 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"prefix__Trac\\\\xE9_3528\",\n  d: \"M970.034-82.352l-.016-.051c-.02-.072-.043-.141-.065-.211s-.053-.163-.082-.243-.056-.146-.086-.217-.065-.15-.1-.225-.065-.139-.1-.206-.083-.152-.126-.227-.069-.123-.106-.183q-.11-.175-.231-.34c-.044-.06-.092-.118-.138-.177s-.114-.144-.174-.213-.1-.112-.155-.168-.109-.114-.166-.169-.116-.111-.176-.164-.112-.1-.17-.146-.127-.1-.192-.155-.119-.085-.179-.127-.135-.1-.206-.142q-.18-.115-.369-.216c-.07-.038-.143-.07-.215-.105s-.143-.07-.216-.1l-.215-.086c-.072-.028-.162-.061-.244-.089s-.135-.044-.2-.065c-.1-.029-.2-.055-.3-.078-.055-.013-.109-.027-.164-.038-.16-.033-.322-.061-.486-.08a.471.471 0 0 0-.285.078 7.9 7.9 0 0 1-4.657 1.517 7.9 7.9 0 0 1-4.656-1.517.471.471 0 0 0-.285-.078c-.164.019-.326.047-.486.08-.055.011-.109.025-.163.038-.1.024-.2.049-.3.079-.069.02-.136.042-.2.064-.083.028-.164.057-.245.089s-.144.055-.214.086-.145.067-.217.1l-.214.1c-.126.068-.249.14-.369.216-.071.045-.137.094-.206.142s-.12.083-.179.127-.129.1-.193.155l-.17.146c-.055.046-.119.108-.176.164s-.111.112-.166.17-.105.11-.155.167-.117.141-.175.214-.094.116-.138.176q-.121.166-.231.34c-.037.06-.071.122-.106.183s-.086.15-.126.227-.068.137-.1.206-.068.149-.1.225-.058.144-.086.217-.056.161-.082.243-.045.14-.065.211c0 .017-.011.034-.016.051a5.764 5.764 0 0 0-.2 1.462v1.955a.885.885 0 0 0 .478.744 17.441 17.441 0 0 0 5.087 1.168h.047c.325.035.671.065 1.031.093l.074.006q.416.031.864.055l.336.018.425.016c.559.02 1.119.033 1.679.031.56 0 1.12-.01 1.679-.031.142-.005.287-.009.425-.016l.336-.018q.447-.023.863-.055l.075-.006c.359-.028.7-.058 1.03-.093h.047a17.439 17.439 0 0 0 5.087-1.168.885.885 0 0 0 .478-.744v-1.95a5.753 5.753 0 0 0-.203-1.462z\",\n  className: \"prefix__cls-1\",\n  \"data-name\": \"Trac\\\\xE9 3528\",\n  transform: \"translate(-950.189 98.885)\"\n});\n\nvar _ref4 = /*#__PURE__*/React.createElement(\"path\", {\n  id: \"prefix__Trac\\\\xE9_3529\",\n  d: \"M964.526-99.994a5.93 5.93 0 0 0 5.931-5.93 5.93 5.93 0 0 0-5.93-5.931 5.93 5.93 0 0 0-5.931 5.93 5.93 5.93 0 0 0 5.93 5.931zm2.809-3.576a2.821 2.821 0 0 1-2.81 1.563 2.821 2.821 0 0 1-2.81-1.563z\",\n  className: \"prefix__cls-1\",\n  \"data-name\": \"Trac\\\\xE9 3529\",\n  transform: \"translate(-954.502 111.854)\"\n});\n\nvar SvgPersonIcon = function SvgPersonIcon(_ref) {\n  var svgRef = _ref.svgRef,\n      title = _ref.title,\n      props = _objectWithoutProperties(_ref, [\"svgRef\", \"title\"]);\n\n  return /*#__PURE__*/React.createElement(\"svg\", _extends({\n    id: \"prefix__Groupe_7496\",\n    width: 20.043,\n    height: 22.085,\n    \"data-name\": \"Groupe 7496\",\n    viewBox: \"0 0 20.043 22.085\",\n    ref: svgRef\n  }, props), title ? /*#__PURE__*/React.createElement(\"title\", null, title) : null, _ref2, _ref3, _ref4);\n};\n\nvar ForwardRef = /*#__PURE__*/React.forwardRef(function (props, ref) {\n  return /*#__PURE__*/React.createElement(SvgPersonIcon, _extends({\n    svgRef: ref\n  }, props));\n});\nexport default __webpack_public_path__ + \"static/media/person_icon.9b0e390e.svg\";\nexport { ForwardRef as ReactComponent };","import React from 'react';\nimport {connect} from \"react-redux\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport PropTypes from \"prop-types\";\nimport {compose} from \"redux\";\nimport Footer from \"../Footer\";\nimport Header from \"../Header\";\nimport Content from \"../Content\";\nimport Board from \"./Board\";\nimport {\n    CHESS_BOARD_TYPE_ONLINE, CHESS_BOARD_TYPE_TRAINING_WITH_AI,\n    CHESSMAN_AI_ID,\n    CHESSMAN_PLAYER,\n    CHESSMAN_YOURSELF_A,\n    CHESSMAN_YOURSELF_B\n} from \"../../constants/constants\";\nimport * as gameActions from \"../../_actions/game\";\nimport DialogForm from \"../../theme/DialogForm\";\nimport i18n from \"../../i18n\";\nimport Button from \"@material-ui/core/Button\";\nimport AppInput from \"../../theme/AppInput\";\nimport Menu from \"@material-ui/core/Menu\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport NoiceWinIcon from \"../../images/notice_win.png\";\nimport {ReactComponent as PersonIcon} from \"../../images/person_icon.svg\";\nimport {NavLink} from \"react-router-dom\";\nimport * as links from \"../../constants/links\";\nimport Slide from \"@material-ui/core/Slide\";\nimport {withTranslation} from \"react-i18next\";\nconst Transition = React.forwardRef(function Transition(props, ref) {\n    return <Slide direction=\"up\" ref={ref} {...props} />;\n});\nconst styles = theme => ({\n    trainingWithAI: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'flex-start',\n        height: '100%',\n        flexDirection: 'column',\n        overflowY: 'scroll',\n        backgroundColor: '#e0ece4',\n        borderRadius: 9,\n        margin: '0.5rem 1rem',\n        '&::-webkit-scrollbar': {\n            width: 9,\n            height: 9,\n        },\n        '&::-webkit-scrollbar-track': {\n            // background: '#ee6f57',\n            // borderRadius: 9,\n        },\n        '&::-webkit-scrollbar-thumb': {\n            borderRadius: 9,\n            background: '#ee6f57',\n        },\n    },\n    noticeWin: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        padding: '0.5rem',\n        '& img': {\n            width: 48,\n            height: 48,\n            borderRadius: 11\n        },\n        '& .text': {\n            color: '#d54062',\n            fontSize: '0.9rem',\n            fontWeight: 600,\n            paddingLeft: '0.5rem'\n        }\n    },\n    trainingHeader: {\n        color: '#123152',\n        width: '100%',\n        fontSize: '1.2rem',\n        textAlign: 'center',\n        fontWeight: 700,\n        padding: '1rem 0rem'\n    },\n    btnNewChessBoard: {\n        backgroundColor: '#123152',\n        textTransform: 'initial',\n        padding: '0.5rem 1.5rem',\n        fontWeight: 600,\n        borderRadius: 9,\n        margin: '0.5rem 0rem',\n        color: '#fff',\n        '&:hover': {\n            backgroundColor: '#123152',\n        }\n    },\n    sizeInput: {\n        width: '100%',\n    },\n    setupBoardWrapper: {\n\n    },\n    btnSetupBoard: {\n        backgroundColor: '#123152',\n        textTransform: 'initial',\n        padding: '0.5rem 1.5rem',\n        fontWeight: 600,\n        borderRadius: 9,\n        marginTop: '1rem',\n        color: '#fff',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: '#123152',\n        }\n    },\n    selectChessman: {\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'flex-start',\n        justifyContent: 'flex-start',\n        '& .title': {\n            color: '#123152',\n            width: '100%',\n            padding: '0.5rem 0rem',\n            fontSize: '0.9rem',\n            fontWeight: 600,\n\n        }\n    },\n    notChessman: {\n        color: '#ffdead',\n    },\n    btnChessman: {\n        backgroundColor: '#123152',\n        textTransform: 'initial',\n        padding: '0.5rem 1.5rem',\n        fontWeight: 600,\n        borderRadius: 9,\n        marginTop: '0.25rem',\n        width: '100%',\n        '&:hover': {\n            backgroundColor: '#123152',\n        }\n    },\n    iconChessman: {\n        display: 'flex',\n        alignItems: 'center',\n        width: '100%',\n        '& img': {\n            width: 48,\n            height: 48,\n            border: '1px solid #fff',\n            borderRadius: 9,\n        },\n        '& span': {\n            fontWeight: 600,\n            paddingLeft: '0.5rem',\n            color: '#ffdead',\n        }\n    },\n    dialogNotice: {\n        backgroundColor: 'rgb(251, 236, 236, 0.3)',\n    },\n    winNoticeWrapper: {\n        backgroundColor: 'rgb(251, 236, 236, 0.3)',\n        height: '100%',\n        width: '100%',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column',\n    },\n});\nclass TrainingWithAI extends React.Component {\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            openDialog: false,\n            showBoard: false,\n            setupBoardCheck: false,\n            dataBoardTrainingWithAI: null,\n            chessmanWin: null,\n            setupBoard: {\n                sizeChessBoard: 10,\n                iconChessmanA: null,\n                iconChessmanB: null,\n                firstTurn: CHESSMAN_PLAYER,\n            },\n            menuSelectChessmanAIcon: null,\n            menuSelectChessmanBIcon: null,\n            checkShowChessman: false,\n            setupChessmanDone: false\n        };\n\n        this.getDataBoardCurrent = this.getDataBoardCurrent.bind(this);\n        this.handleDisagree = this.handleDisagree.bind(this);\n        this.handleAgree = this.handleAgree.bind(this);\n        this.checkWinChessman = this.checkWinChessman.bind(this);\n        this.handleSetupBoardChange = this.handleSetupBoardChange.bind(this);\n        this.setupBoard = this.setupBoard.bind(this);\n        this.createNewChessBoard = this.createNewChessBoard.bind(this);\n\n        this.openMenuSelectChessmanAIcon = this.openMenuSelectChessmanAIcon.bind(this);\n        this.closeMenuSelectChessmanAIcon = this.closeMenuSelectChessmanAIcon.bind(this);\n        this.openMenuSelectChessmanBIcon = this.openMenuSelectChessmanBIcon.bind(this);\n        this.closeMenuSelectChessmanBIcon = this.closeMenuSelectChessmanBIcon.bind(this);\n\n    }\n\n    openMenuSelectChessmanAIcon(event) {\n        this.setState({\n            menuSelectChessmanAIcon: event.currentTarget\n        });\n    }\n    closeMenuSelectChessmanAIcon() {\n        this.setState({\n            menuSelectChessmanAIcon: null\n        });\n    }\n    openMenuSelectChessmanBIcon(event) {\n        this.setState({\n            menuSelectChessmanBIcon: event.currentTarget\n        });\n    }\n    closeMenuSelectChessmanBIcon() {\n        this.setState({\n            menuSelectChessmanBIcon: null\n        });\n    }\n\n    componentDidMount() {\n        const {\n            dataBoardTrainingWithAI,\n            dataUserAuth\n        } = this.props;\n        this.props.showDataChessmans();\n        if (dataBoardTrainingWithAI && (dataBoardTrainingWithAI.chessmanUserId === (dataUserAuth ? dataUserAuth.uid : null))) {\n            this.setState({\n                openDialog: true\n            });\n        } else {\n            this.setState({\n                setupBoardCheck: true\n            })\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState, snapshot) {\n        const {\n            dataChessmans,\n            dataBoardTrainingWithAI\n        } = this.props;\n        const {\n            setupBoard,\n            checkShowChessman,\n            chessmanWin\n        } = this.state;\n        if (dataChessmans && Array.isArray(dataChessmans) && dataChessmans.length >= 2 && !checkShowChessman) {\n            setupBoard.iconChessmanA = dataChessmans[0];\n            setupBoard.iconChessmanB = dataChessmans[1];\n            this.setState({\n                checkShowChessman: true,\n                setupBoard: setupBoard\n            });\n        }\n        if (chessmanWin && dataBoardTrainingWithAI) {\n            this.props.saveDataBoardTrainingWithAI(null);\n        }\n\n    }\n\n    getDataBoardCurrent(dataBoard) {\n        this.props.saveDataBoardTrainingWithAI(dataBoard);\n    }\n\n    checkWinChessman(chessmanWin) {\n        this.props.saveDataBoardTrainingWithAI(null);\n        this.setState({\n            chessmanWin: chessmanWin\n        })\n    }\n\n    handleDisagree() {\n        this.props.saveDataBoardTrainingWithAI(null);\n        this.createNewChessBoard();\n    }\n\n    handleAgree() {\n        const {\n            setupBoard\n        } = this.state;\n        const {\n            dataBoardTrainingWithAI\n        } = this.props;\n        setupBoard.iconChessmanA =dataBoardTrainingWithAI.iconChessmanA;\n        setupBoard.iconChessmanB =dataBoardTrainingWithAI.iconChessmanB;\n        setupBoard.sizeChessBoard =dataBoardTrainingWithAI.sizeChessBoard;\n        setupBoard.firstTurn =dataBoardTrainingWithAI.firstTurn;\n\n        this.setState({\n            openDialog: false,\n            showBoard: true,\n            dataBoardTrainingWithAI: dataBoardTrainingWithAI,\n            setupBoard: setupBoard\n        });\n    }\n\n    handleSetupBoardChange(name, value) {\n        const {\n            setupBoard\n        } = this.state;\n        if (name === 'iconChessmanA') {\n            if (setupBoard.iconChessmanB && value.chessmanId === setupBoard.iconChessmanB.chessmanId) {\n                setupBoard.iconChessmanB = null;\n            }\n        } else if (name === 'iconChessmanB') {\n            if (setupBoard.iconChessmanA && value.chessmanId === setupBoard.iconChessmanA.chessmanId) {\n                setupBoard.iconChessmanA = null;\n            }\n        } else if (name === 'sizeChessBoard') {\n            if (value < 10 || value > 20) {\n                value = setupBoard.sizeChessBoard\n            }\n        }\n\n        this.setState({\n            setupBoard: {\n                ...setupBoard,\n                [name]: value\n            },\n            menuSelectChessmanAIcon: null,\n            menuSelectChessmanBIcon: null\n        })\n    }\n\n    setupBoard() {\n        const {\n            setupBoard\n        } = this.state;\n        if (setupBoard.sizeChessBoard && setupBoard.sizeChessBoard >= 10 && setupBoard.iconChessmanA && setupBoard.iconChessmanB) {\n            this.setState({\n                showBoard: true\n            });\n        }\n    }\n\n    createNewChessBoard() {\n        this.setState({\n            showBoard: false,\n            setupBoardCheck: true,\n            chessmanWin: null,\n            setupBoard: {\n                sizeChessBoard: 10,\n                iconChessmanA: null,\n                iconChessmanB: null,\n                firstTurn: CHESSMAN_PLAYER,\n            },\n            checkShowChessman: false,\n            setupChessmanDone: false,\n            openDialog: false,\n            dataBoardTrainingWithAI: null\n        });\n    }\n\n\n    render() {\n        const {\n            openDialog,\n            showBoard,\n            dataBoardTrainingWithAI,\n            chessmanWin,\n            setupBoard,\n            setupBoardCheck,\n            menuSelectChessmanAIcon,\n            menuSelectChessmanBIcon,\n            checkShowChessman,\n        } = this.state;\n        const {\n            classes,\n            dataUserAuth,\n            dataChessmans\n        } = this.props;\n        return (\n            <React.Fragment>\n                <Header />\n                <Content>\n                    <div className={classes.trainingWithAI}>\n                        <div className={classes.trainingHeader}>\n                            {i18n.t('trainingWithAI.header')}\n                        </div>\n\n                        {setupBoardCheck && !showBoard && <div className={classes.setupBoardWrapper}>\n                            <AppInput\n                                className={classes.sizeInput}\n                                type=\"number\"\n                                name=\"sizeChessBoard\"\n                                value={setupBoard.sizeChessBoard}\n                                onChange={(event) => this.handleSetupBoardChange('sizeChessBoard', event.target.value)}\n                                inputProps={{\n                                    min: 10,\n                                    max: 20\n                                }}\n                            />\n                            <div className={classes.selectChessman}>\n                                <span className=\"title\">{i18n.t('trainingWithAI.setupBoard.selectChessmanA.title')}</span>\n                                { checkShowChessman && <Button aria-controls=\"simple-menu\" className={classes.btnChessman}  aria-haspopup=\"true\" onClick={this.openMenuSelectChessmanAIcon}>\n                                    {setupBoard && setupBoard.iconChessmanA ?\n                                        <div className={classes.iconChessman}>\n                                            <img src={setupBoard.iconChessmanA.chessmanUrl} alt=\"\" style={{width: 50, height: 50}}/>\n                                            <span>{setupBoard.iconChessmanA.name}</span>\n                                        </div> :\n                                        <div className={classes.notChessman}>\n                                            {i18n.t('trainingWithAI.setupBoard.selectChessmanA.title')}\n                                        </div>\n                                    }\n                                </Button>}\n                                {menuSelectChessmanAIcon && <Menu\n                                    id=\"simple-menu\"\n                                    anchorEl={menuSelectChessmanAIcon}\n                                    keepMounted\n                                    open={true}\n                                    onClose={this.closeMenuSelectChessmanAIcon}\n                                >\n                                    {\n                                        dataChessmans.map((item, index) => {\n                                            return (<MenuItem onClick={() => this.handleSetupBoardChange('iconChessmanA', item)}>\n                                                <img src={item.chessmanUrl} alt=\"\" style={{width: 48, height: 48,}}/>\n                                                <span>{item.name}</span>\n                                            </MenuItem>);\n                                        })\n                                    }\n                                </Menu>}\n                            </div>\n                            <div className={classes.selectChessman}>\n                                <span className=\"title\">{i18n.t('trainingWithAI.setupBoard.selectChessmanB.title')}</span>\n                                { checkShowChessman && <Button aria-controls=\"simple-menu\" className={classes.btnChessman} aria-haspopup=\"true\" onClick={this.openMenuSelectChessmanBIcon}>\n                                    {setupBoard && setupBoard.iconChessmanB ?\n                                        <div className={classes.iconChessman}>\n                                            <img src={setupBoard.iconChessmanB.chessmanUrl} alt=\"\" style={{width: 50, height: 50}}/>\n                                            <span>{setupBoard.iconChessmanB.name}</span>\n                                        </div> :\n                                        <div className={classes.notChessman}>\n                                            {i18n.t('trainingWithAI.setupBoard.selectChessmanB.title')}\n                                        </div>\n                                    }\n                                </Button>}\n                                {menuSelectChessmanBIcon && <Menu\n                                    id=\"simple-menu\"\n                                    anchorEl={menuSelectChessmanBIcon}\n                                    keepMounted\n                                    open={true}\n                                    onClose={this.closeMenuSelectChessmanBIcon}\n                                >\n                                    {\n                                        dataChessmans.map((item, index) => {\n                                            return (<MenuItem onClick={() => this.handleSetupBoardChange('iconChessmanB', item)}>\n                                                <img src={item.chessmanUrl} alt=\"\" style={{width: 50, height: 50}}/>\n                                                <span>{item.name}</span>\n                                            </MenuItem>);\n                                        })\n                                    }\n                                </Menu>}\n                            </div>\n                            <Button\n                                className={classes.btnSetupBoard}\n                                onClick={this.setupBoard}\n                            >\n                                {i18n.t('trainingWithAI.setupBoard.btnSubmit')}\n                            </Button>\n                        </div>}\n                        {showBoard && <Board\n                            size={setupBoard.sizeChessBoard}\n                            chessmanA={CHESSMAN_AI_ID}\n                            chessmanB={CHESSMAN_PLAYER}\n                            firstTurn={setupBoard.firstTurn}\n                            chessmanUserId={dataUserAuth ? dataUserAuth.uid : null}\n                            iconChessmanA={setupBoard.iconChessmanA}\n                            iconChessmanB={setupBoard.iconChessmanB}\n                            chessBoardType={CHESS_BOARD_TYPE_TRAINING_WITH_AI}\n                            getDataBoardCurrent={this.getDataBoardCurrent}\n                            dataBoardTrainingDefault={dataBoardTrainingWithAI}\n                            checkWinChessman={this.checkWinChessman}\n                        />}\n                    </div>\n                </Content>\n                <Footer />\n                <DialogForm\n                    dialogProps={{\n                        open: openDialog\n                    }}\n                    messageProps={{\n                        content: i18n.t('trainingWithAI.dialog.content_continue'),\n                        color: ''\n                    }}\n                    disagreeButtonProps={{\n                        handleDisagree: this.handleDisagree,\n                        background: '',\n                        content: i18n.t('trainingWithAI.dialog.no'),\n                    }}\n                    agreeButtonProps={{\n                        handleAgree: this.handleAgree,\n                        background: '',\n                        content: i18n.t('trainingWithAI.dialog.yes'),\n                    }}\n                />\n                <Dialog className={classes.dialogNotice} PaperProps={{\n                    style: {\n                        backgroundColor: 'transparent',\n                        boxShadow: 'none',\n                    },\n                }} fullScreen open={chessmanWin && setupBoard} TransitionComponent={Transition}>\n                    <div className={classes.winNoticeWrapper}>\n                        <img src={NoiceWinIcon} alt=\"\"/>\n                        {setupBoard && setupBoard.iconChessmanA && setupBoard.iconChessmanB && <div className={classes.noticeWin}>\n                            {\n                                chessmanWin === CHESSMAN_AI_ID\n                                    ?\n                                    <React.Fragment>\n                                        <img src={setupBoard.iconChessmanA.chessmanUrl} alt=\"\"/>\n                                        <span className=\"text\">{i18n.t('trainingWithAI.setupBoard.noticeWin.chessmanA')}</span>\n                                    </React.Fragment>\n                                    :\n                                    <React.Fragment>\n                                        <img src={setupBoard.iconChessmanB.chessmanUrl} alt=\"\"/>\n                                        <span className=\"text\">{i18n.t('trainingWithAI.setupBoard.noticeWin.chessmanB')}</span>\n                                    </React.Fragment>\n                            }\n                        </div>}\n                        <Button\n                            className={classes.btnNewChessBoard}\n                            onClick={this.createNewChessBoard}\n                        >\n                            {i18n.t('trainingWithAI.setupBoard.noticeWin.newChessBoard')}\n                        </Button>\n                    </div>\n                </Dialog>\n            </React.Fragment>\n        );\n    }\n}\n\nTrainingWithAI.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\n\nconst mapStateToProps = state => ({\n    dataUserAuth: state.authReducer.dataUserAuth,\n    dataChessmans: state.gameReducer.dataChessmans,\n    dataBoardTrainingWithAI: state.gameReducer.dataBoardTrainingWithAI\n});\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        saveDataBoardTrainingWithAI: (dataTraining) => dispatch(gameActions.saveDataBoardTrainingWithAI(dataTraining)),\n        showDataChessmans: () => dispatch(gameActions.showDataChessmans()),\n    }\n};\n\nexport default compose(\n    connect(mapStateToProps, mapDispatchToProps),\n    withStyles(styles),\n    withTranslation(),\n) (TrainingWithAI);\n"],"sourceRoot":""}